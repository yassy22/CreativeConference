---
const { rols, groups } = Astro.props;
---

<script is:inline>
  const handleOptionChange = () => {
    const selection = [
      ...document.querySelectorAll(".filteroption:checked"),
    ].map(($input) => $input.value);

    if (selection.length > 0) {
      document
        .querySelectorAll("[data-rol]")

        .forEach(($li) => $li.classList.add("hidden"));

      selection.forEach((rol) => {
        document
          .querySelectorAll(`[data-rol="${rol}"]`)
          .forEach(($li) => $li.classList.remove("hidden"));
      });
    } else {
      document
        .querySelectorAll("[data-rol]")
        .forEach(($li) => $li.classList.remove("hidden"));
    }
  };

  document.addEventListener("astro:page-load", () => {
    const options = document.querySelectorAll(".filteroption");
    options.forEach((option) =>
      option.addEventListener("change", handleOptionChange)
    );
  });
</script>

<ul class="filter">
  {
    rols.map((rol) => (
      <>
        <li>
          <label>
            <span>{rol.attributes.name}</span>
            <input
              class="filteroption"
              type="checkbox"
              value={rol.attributes.name}
              name="filter"
            />
          </label>
        </li>
      </>
    ))
  }
</ul>

<ul class="filter">
  {
    groups.map((rol) => (
      <>
        <label>
          <li>
            <a href={`${import.meta.env.BASE_URL}/groups/${rol.id}`}>
              {rol.attributes.name}{" "}
            </a>
          </li>
        </label>
      </>
    ))
  }
</ul>

<style>
  ul {
    display: flex;
    gap: var(--s2);
    margin-bottom: var(--s4);
    justify-content: end;
    padding-right: 3rem;
  }

  input {
    display: none;
  }

  label {
    padding: var(--s_1) var(--s2);
    background-color: white;
    border-radius: 20px;
  }

  label:hover {
    box-shadow: var(--defaultShadow);
    color: #d9d9d9;
    cursor: pointer;
  }

  label:has(input:checked) {
    background-color: var(--c-primary);
    color: #d9d9d9;
  }
</style>
